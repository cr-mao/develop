[client]
port = 3306
socket = /db/mysqld.sock      # ubuntu 包安装是/var/run/mysqld/mysqld.sock 做了一点区分
default-character-set = utf8mb4 #编码

[mysqld_safe]
socket          = /db/mysqld.sock
nice            = 0

[mysqld]
user = mysql
pid-file        = /db/mysqld.pid
socket          = /db/mysqld.sock

port = 3306
report-port = 3306
report-host = xxxx.com #linux server hostname
basedir=/usr/local/mysql
datadir=/db/data
tmpdir=/db/tmp
lc-messages-dir = /usr/local/mysql/share #错误消息语言存放目录，默认英文
explicit_defaults_for_timestamp #取消timestamp字段的默认定义
# replicate_do_db=cutie_aquarium 只复制特定database，从节点按需使用
# replicate_do_db=dream_zoo 只复制特定database，从节点按需使用

sql-mode = ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_IN_DATE,NO_ZERO_DATE,NO_AUTO_VALUE_ON_ZERO # 定义了mysql应该支持的sql语法，数据校验等
#sql-mode = STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
# 定义了mysql应该支持的sql语法，数据校验等
#NO_ENGINE_SUBSTITUTION : 如果需要的存储引擎被禁用或未编译，可以防止自动替换存储引擎
#NO_AUTO_CREATE_USER : 禁止GRANT创建密码为空的用户
#STRICT_TRANS_TABLES : InnoDB 插入报错全部回滚，MyISAM插入大于第一行报错，非法值改成隐式默认值或者相近值插入，不会报错
#ERROR_FOR_DIVISION_BY_ZERO : 在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告
#NO_ZERO_IN_DATE : 在严格模式下，不允许日期和月份为零
#NO_ZERO_DATE : 设置该值，mysql数据库不允许插入零日期，插入零日期会抛出错误而不是警告。
#NO_AUTO_VALUE_ON_ZERO : 该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户 希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。
group_concat_max_len=10240
character-set-server = utf8mb4 #编码
bind-address = 0.0.0.0 #监听地址
# SAFETY #
max-allowed-packet = 32M #这个值来限制server接受的数据包大小
max-connect-errors = 1000000 #单IP最大错误链接数，超过之后将该IP封禁
skip-name-resolve #跳过客户端域名解析，这个参数打开之后，max-connect-errors 将失去意义
#read-only = 1 #只读参数，如果是从库必须开启
# CACHES AND LIMITS #
tmp-table-size = 128M #临时表空间大小，能够增加多表查询的速度
max-heap-table-size = 128M #内存表的大小，用于计算内存表的max_rows
query-cache-type = 0 #是否开启缓存查询，视业务的属性决定是否开启
query-cache-size = 0 #缓存查询的空间大小
max-connections = 3000 #最大链接数
thread-cache-size = 400 #最大缓存链接数，尽量匹配当前系统的平均连接数
open-files-limit = 65535 #最大文件打开数
table-definition-cache = 128 #缓存.frm的数量
table-open-cache = 128 #所有线程打开表的数量，可以通过open_tables的值判断是否需要增加
# BINARY LOGGING #
server-id = 99999 #在复杂的集群环境中用于区分数据库实例，所有实例必须保持不一致
log-bin = /db/logs/mysql-bin
expire-logs-days = 7 #保存7天的日志
sync-binlog = 1 #在提交事务之前，允许将二进制日志同步到磁盘。这是最安全的设置，但由于磁盘写入次数增加，可能会对性能产生负面影响。
max-binlog-size = 1024M
binlog-format = ROW #如非必要，线上尽可能使用row
binlog_rows_query_log_events=1 #binlog能在ROW格式下显示更详细的信息，但会带来更高的额外开销
# RELAY LOGGING #
relay-log = /db/logs/mysql-relay-bin

# MSR + GTID MODE
#gtid-mode = on  #新建数据库尽可能使用gitd，本配置未开启
#enforce-gtid-consistency = true
master-info-repository = TABLE
relay-log-info-repository = TABLE
#rpl_semi_sync_master_enabled=1 #开启半同步复制，需要gtid，可以减轻主从复制压力

# INNODB #
innodb_flush_method = O_DIRECT #定义用于将数据刷新到 InnoDB 数据文件和日志文件的方法，这可能会影响I/O吞吐量。
innodb_log_file_size = 1G #ib_logfilex(默认有0 1两个)日志文件的大小，值越大，缓冲池中需要的检查点刷新活动越少，从而节省磁盘I/O，日志文件大小按实例数据量大小调整在64M-1024M之间
innodb_flush_log_at_trx_commit = 1 #最安全的配置，但将占用更多I/O，InnoDB 日志缓冲区的内容将 在每次事务提交时写入日志文件，并将日志文件 刷新到磁盘
innodb_file_per_table = 1 #InnoDB存储数据和索引在一个单独的每个新创建的表 .ibd 文件，而不是系统表空间
innodb_buffer_pool_size = 2G #InnoDB 用来高速缓冲数据和索引内存缓冲大小，更大的设置可以使访问数据时减少磁盘 I/O
#innodb_read_io_threads = 8 #根据MySQL服务器CPU核数酌情分配，尽量不要超过CPU核数
#innodb_write_io_threads = 8 #根据MySQL服务器CPU核数酌情分配，尽量不要超过CPU核数
innodb_undo_log_truncate = 1 #启用后，超出定义的阈值的撤消表空间 innodb_max_undo_log_size将标记为截断
innodb_max_undo_log_size = 2G #定义撤消表空间的阈值大小
innodb_undo_tablespaces = 3 #undo表空间，用于截断undo日志（至少需要两个undo表空间才能截断undo日志）
innodb_data_file_path = ibdata1:1G;ibdata2:1G:autoextend #单独指定数据文件的路径与大小

# LOGGING #
log-error = /db/logs/mysql-error.log
log-queries-not-using-indexes = 1 #不走索引的查询也记录进入慢查询日志
slow-query-log = 1 #打开慢查询日志
long-query-time = 1 #超过1S的查询记录为慢查询
slow-query-log-file = /db/logs/mysql-slow.log
log_slave_updates = 1 #从库在接收主库发送来的数据，是否记录在binlog中，1为打开，0为关闭。
# Disabling symbolic-links is recommended to prevent assorted security risks
symbolic-links = 0

# * IMPORTANT: Additional settings that can override those from this file!
# The files must end with '.cnf', otherwise they'll be ignored.
!includedir /etc/mysql/conf.d/
